<UserControl x:Class="SessionManagerExtension.Windows.ToolWindows.SessionManagerToolWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:local="clr-namespace:SessionManagerExtension.WPF"
             xmlns:converters="clr-namespace:SessionManagerExtension.WPF.Converters"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             Name="SessionManagerToolWindow"
             DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <UserControl.Resources>
        <Style x:Key="VsGridViewColumnHeaderGripper" TargetType="Thumb">
            <Setter Property="Width" Value="18" />
            <Setter Property="Background" Value="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowBorderBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                            <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowBorderBrushKey}}" />
        </Style>

        <Style x:Key="VsGridViewColumnHeader" TargetType="GridViewColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="HeaderBorder">
                                                <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarHoverColorKey}}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="HeaderBorder" BorderThickness="0,1,0,1" Padding="2,0,2,0">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowBorderColorKey}}"/>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowBackgroundColorKey}}"/>
                                </Border.Background>
                                <ContentPresenter x:Name="HeaderContent" Margin="4,4,4,5" RecognizesAccessKey="True"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,-9,0" Style="{StaticResource VsGridViewColumnHeaderGripper}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Role" Value="Floating">
                    <Setter Property="Opacity" Value="0.7" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="GridViewColumnHeader">
                                <Canvas Name="PART_FloatingHeaderCanvas">
                                    <Rectangle Fill="#60000000" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" />
                                </Canvas>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Role" Value="Padding">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="GridViewColumnHeader">
                                <Border Name="HeaderBorder" BorderThickness="0,1,0,1">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowBackgroundColorKey}}"/>
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowBorderColorKey}}"/>
                                    </Border.BorderBrush>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="VsListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Padding" Value="5 0 5 0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource {x:Static vs:EnvironmentColors.ComboBoxSelectionColorKey}}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarHoverColorKey}}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="VsListViewStyle" TargetType="{x:Type ListView}">
            <Style.Resources>
                <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource VsGridViewColumnHeader}" />
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource VsListViewItemStyle}" />
            </Style.Resources>

            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowBorderBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        </Style>

        <converters:PathRelativeOrFullConverter x:Key="PathRelativeOrFullConverter"/>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="200" />
            <RowDefinition Height="5" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <ListView x:Name="SessionsList" 
                  Grid.Row="0"
                  SelectionMode="Single" 
                  AllowDrop="True"
                  Style="{DynamicResource VsListViewStyle}"
                  SelectedItem="{Binding State.SelectedSession}"
                  SizeChanged="ListView_SizeChanged"
                  ItemsSource="{Binding SessionManager.SolutionSettings.Sessions}"
                  dd:DragDrop.IsDragSource="True"
                  dd:DragDrop.IsDropTarget="True"
                  dd:DragDrop.DropHandler="{Binding}">

            <ListView.Resources>
                <local:BindingProxy x:Key="Proxy" Data="{Binding}" />
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource VsListViewItemStyle}">
                    <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <ContextMenu.Resources>
                                    <Style TargetType="{x:Type ContextMenu}">
                                        <Setter Property="Background" Value="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarMenuBackgroundGradientBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowTextBrushKey}}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Padding" Value="0"/>
                                    </Style>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Background" Value="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarMenuBackgroundGradientBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowTextBrushKey}}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <Grid>
                                                            <ContentPresenter Content="{TemplateBinding Icon}" HorizontalAlignment="Left" Margin="5 3 0 3" />
                                                            <ContentPresenter Content="{TemplateBinding Header}" Margin="35 3 15 3" />
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsHighlighted" Value="True">
                                                            <Setter Property="Background"  Value="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarMenuItemMouseOverBorderBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <!--<Style TargetType="Separator">
                                        <Setter Property="Background" Value="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarMenuBackgroundGradientBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowTextBrushKey}}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Separator}">
                                                    <Border 
                                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                                        Background="{TemplateBinding Background}" 
                                                        Height="10" 
                                                        SnapsToDevicePixels="true"/>
                                                    --><!-- ControlTemplate with a TemplateBinding to Background here --><!--
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>-->
                                </ContextMenu.Resources>

                                <MenuItem Header="Open" Command="{Binding Source={StaticResource Proxy}, Path=Data.OpenSessionCommand}">
                                    <!--<MenuItem.Icon>
                                        <Image Height="14" Width="14">
                                            <Image.Source>
                                                <CroppedBitmap Source="pack://application:,,,/SessionManager;component/Resources/icons.png" SourceRect="112,0,16,16"/>
                                            </Image.Source>
                                        </Image>
                                    </MenuItem.Icon>-->
                                </MenuItem>
                                <MenuItem Header="Restore and Close Others" Command="{Binding Source={StaticResource Proxy}, Path=Data.RestoreSessionCommand}" >
                                    <!--<MenuItem.Icon>
                                        <Image Height="14" Width="14">
                                            <Image.Source>
                                                <CroppedBitmap Source="pack://application:,,,/SessionManager;component/Resources/icons.png" SourceRect="32,0,16,16"/>
                                            </Image.Source>
                                        </Image>
                                    </MenuItem.Icon>-->
                                </MenuItem>
                                <MenuItem Header="Close Documents" Command="{Binding Source={StaticResource Proxy}, Path=Data.CloseSessionDocumentsCommand}" />
                                <MenuItem Header="Rename" Command="{Binding Source={StaticResource Proxy}, Path=Data.RenameSessionCommand}" />
                                <MenuItem Header="Delete" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteSessionCommand}" >
                                    <!--<MenuItem.Icon>
                                        <Image Height="14" Width="14">
                                            <Image.Source>
                                                <CroppedBitmap Source="pack://application:,,,/SessionManager;component/Resources/icons.png" SourceRect="48,0,16,16"/>
                                            </Image.Source>
                                        </Image>
                                    </MenuItem.Icon>-->
                                </MenuItem>
                                <!--<Separator Background="{DynamicResource {x:Static vs:EnvironmentColors.CommandBarMenuSeparatorBrushKey}}"/>-->
                                <MenuItem Header="Save Open Documents to Session" Command="{Binding Source={StaticResource Proxy}, Path=Data.UpdateSessionCommand}"></MenuItem>
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Resources>

            <ListView.View>
                <GridView AllowsColumnReorder="false">
                    <GridViewColumn Header="Session" Width="Auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock Text="{Binding Path=Name}" FontWeight="Bold"/>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Documents" Width="Auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock Text="{Binding Path=Documents.Count, StringFormat={}{0} Documents}"/>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" Background="{DynamicResource {x:Static vs:EnvironmentColors.ToolWindowBorderBrushKey}}" />

        <ListView x:Name="DocumentList"
                    Grid.Row="2"
                    VerticalAlignment="Stretch"
                    SelectionMode="Single"
                    Style="{DynamicResource VsListViewStyle}"
                    ItemsSource="{Binding State.SelectedSession.Documents}"
                    SizeChanged="ListView_SizeChanged">

            <ListView.View>
                <GridView AllowsColumnReorder="false">
                    <GridViewColumn Header="File Name" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock Text="{Binding Path=Name}"/>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="File Path" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock Text="{Binding Path=FullPath, Converter={StaticResource PathRelativeOrFullConverter}}"/>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</UserControl>
